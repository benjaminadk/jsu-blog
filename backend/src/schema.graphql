# import * from './generated/prisma.graphql'

type Query {
  me: User
  post(id: ID!): Post
}

type Mutation {
  signup(email: String!, name: String!, password: String!): Payload
  signin(email: String!, password: String!): Payload
  signout: Payload
  signS3(filename: String!, filetype: String!): S3Payload
  updateUser(data: UserUpdateInput): UserPayload
  createPost: PostPayload
  updatePost(id: ID!, data: PostUpdateInput): Payload
  deletePost(id: ID!): Payload
}

type User {
  id: ID!
  email: String!
  name: String!
  password: String
  image: String
  bio: String
  role: Role!
  posts: [Post]
  topics: [Topic]
  createdAt: DateTime!
}

type Post {
  id: ID!
  topic: Topic!
  title: String!
  subtitle: String
  body: String
  image: String
  tags: [String]
  published: Boolean!
  author: User!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Payload {
  success: Boolean!
  message: String!
}

type S3Payload {
  requestUrl: String!
  imageUrl: String!
}

type UserPayload {
  success: Boolean!
  message: String!
  user: User
}

type PostPayload {
  success: Boolean!
  message: String!
  id: ID!
}

enum Role {
  USER
  ADMIN
}

enum Topic {
  ARTIFICIAL_INTELLIGENCE
  CYBER_SECURITY
  DATA_SCIENCE
  JAVASCRIPT
  MACHINE_LEARNING
  MATH
  NONE
  PROGRAMMING
  SCIENCE
  SPACE
  TECHNOLOGY
}
